using Mutagen.Bethesda;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;

namespace Fusion
{
    public class Program
    {
        private static Lazy<Settings> _settings = null!;
        private static Settings Settings => _settings.Value;

        public static async Task<int> Main(string[] args)
        {

            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetTypicalOpen(GameRelease.SkyrimSE, "OverridePatch.esp")
                .SetAutogeneratedSettings(nickname: "Settings", path: "settings.json", out _settings)
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            // Get New Settings based on Simple/Advanced
            SettingsUtility NewSettings = new();
            NewSettings.Process(state, Settings);

            // Record Patchers
            ACHR.Patch(state, NewSettings);
            ACTI.Patch(state, NewSettings);
            ALCH.Patch(state, NewSettings);
            AMMO.Patch(state, NewSettings);
            ARMO.Patch(state, NewSettings);
            ARMA.Patch(state, NewSettings);
            BOOK.Patch(state, NewSettings);
            CELL.Patch(state, NewSettings);
            CONT.Patch(state, NewSettings);
            FACT.Patch(state, NewSettings);
            FLOR.Patch(state, NewSettings);
            GRAS.Patch(state, NewSettings);
            INGR.Patch(state, NewSettings);
            LCTN.Patch(state, NewSettings);
            LVLI.Patch(state, NewSettings);
            LVLN.Patch(state, NewSettings);
            LVSP.Patch(state, NewSettings);
            NPC_.Patch(state, NewSettings);
            PERK.Patch(state, NewSettings);
            QUST.Patch(state, NewSettings);
            REFR.Patch(state, NewSettings);
            SCRL.Patch(state, NewSettings);
            SLGM.Patch(state, NewSettings);
            WEAP.Patch(state, NewSettings);
        }
    }
}
